API DOCUMENTATION: PayParrot API
================================

Author:		PayParrot Team
Version:	v1
Base URI:	http://payparrot.com
Auth:		Token


Description
###########

The following document describe the RESTful API of the PayParrot Service. 


Overview
########

1 Parrot
	1.1 List all parrots
	1.2 Delete a Parrot

2 Notification
	2.1 Get a notification



1. Parrot
#########
URI:			http://payparrot.com/accounts/{account-id}/parrots/{parrot-id}
URI Params:
			{account-id}: account ID
			{parrot-id}: parrot ID

This resource represents a user (parrot) which will be paying with a social network. 


1.1 List all parrots
====================
List all parrots, you can filter them by date.

URI:			http://payparrot.com/accounts/{account-id}/parrots
URI Params:
			{account-id}: account ID

Formats:		application/json 

REQUEST
-------

Method:			GET
Auth:			required

### Request Query String:

Name: from
Require: false
Description: Parrot with suscription date greater or equal to (from). Example format: 2011-11-4

Name: to
Require: false
Description: Parrot with suscription date less or equal to (to). Example format: 2011-12-4

Name: screen_name
Require: false
Description: Filter parrots by parrot twitter name

Name: limit
Require: false
Description: Limit the number of results. Default to 10

Name: skip
Require: false
Description: Skip results. Default to 0


RESPONSE
--------

Answers:
			200 ("OK"):  The data set is returned as the response entity.			404 ("Not Found"):  There is no account with that account ID.
Entities:
Language: js
+----------------------------------------------------------------+
								
[{
    "id": "4fbe4b1e87812bc746000020",
    "_id": "4fbe4b1e87812bc746000020",
    "oauth_token": "YYY",
    "oauth_token_secret": "ZZZ",
    "twitter_id": "572860329",
    "twitter_info": {},
    "payments": [{
        "created_at": "Thu May 24 14:52:43 +0000 2012",
        "text": "First message of fast clapping! http://t.co/ecXrNPKT",
        "account_id": "4fbba86cb968d5c51a000002"
    }],
    "created_at": "2012-05-24T14:52:14.768Z"
}]

+----------------------------------------------------------------+



1.2 Delete a Parrot
===================
When you want to unsuscribe a parrot, you should send Delete a Parrot instruction.

URI:			http://payparrot.com/accounts/{account-id}/parrots/{parrot-id}
URI Params:
			{account-id}: account ID
			{parrot-id}: parrot ID

Formats:		application/json 

REQUEST
-------

Method:			DELETE
Auth:			required

RESPONSE
--------

Answers:
			204 ("No Content"):  The parrot was deleted, no data is returned.			404 ("Not Found"):  There is no parrot or account with that ID.




2. Notification
###############
URI:			http://payparrot.com/accounts/{account-id}/notifications/{notification-id}
URI Params:
			{account-id}: account ID
			{notification-id}: notification ID

Each time an action is trigger in payparrot (new parrot, a payment is processed, etc) a notification is send to your servers. 


2.1 Get a notification
======================
With your account-id and notification-id, you can get the notification, to validate if was send by PayParrot

URI:			http://payparrot.com/accounts/{account-id}/notifications/{notification-id}
URI Params:
			{account-id}: account ID
			{notification-id}: notification ID

Formats:		application/json 

REQUEST
-------

Method:			GET
Auth:			required

RESPONSE
--------

Answers:
			200 ("OK"):  The data set is returned as the response entity.			404 ("Not Found"):  There is no with this user ID.
Entities:
Language: js
+----------------------------------------------------------------+
								
{ queue_message_id: '029a2778-0e88-4d17-8cf9-2791c762bd67',
suscription_id: 4fccba33a5850b9403000001,
account_id: 4fccba336b34ac8803000030,
external_id: '4fccba33a5850b9403000002',
parrot_id: '4fccba33a5850b9403000003',
request_url: 'localhost:3000',
type: 'suscription_activated',
status: 'pending',
id: 4fccba33615bc49403000002 }
+----------------------------------------------------------------+



